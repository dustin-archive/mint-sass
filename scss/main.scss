//
// + Variables
// =============================================================================

$mint-base: 16 !default;

//
// + Compress
// =============================================================================

@function mint-compress($values) {
  $length: length($values);

  @if $length == 1 {
    @return $values;
  }
  @else {
    $a: nth($values, 1);
    $b: nth($values, 2);
    @if $length == 2 {
      @if $a == $b {
        @return $a;
      }
    }
    @else {
      $c: nth($values, 3);
      @if $length == 3 {
        @if $a == $b and $a == $c {
          @return $a;
        }
        @else if $a == $c {
          @return $a $b;
        }
      }
      @else {
        @if $length == 4 {
          $d: nth($values, 4);
          @if $a == $b and $a == $c and $a == $d {
            @return $a;
          }
          @else if $a == $c and $b == $d {
            @return $a $b;
          }
          @else if $b == $d {
            @return $a $b $c;
          }
        }
        @else {
          @error "mint-sass: You can't pass more than 4 values.";
        }
      }
    }
  }

  @return $values;
}

//
// + Scale
// =============================================================================

@function mint-scale($value, $base, $scale) {
  @return ($base / $scale) * $value;
}

//
// + Convert
// =============================================================================

@function mint-convert($value, $base) {
  @return $value / $base;
}

//
// + Process
// =============================================================================

@function mint-unit($values, $base, $scale, $unit) {
  $result: ();
  $values: mint-compress($values);

  @each $value in $values {
    @if type-of($value) == 'number' and $value != 0 {
      $value: mint-scale($value, $base, $scale);
      $value: mint-convert($value, $base);
      $value: $value * $unit;
    }

    $result: join($result, $value);
  }

  @return $result;
}

//
// + Units
// =============================================================================

@function em($values, $scale: $mint-base) {
  @return mint-unit($values, $mint-base, $scale, 1em);
}

@function px($values, $scale: 1) {
  @return mint-unit($values, 1, $scale, 1px);
}

@function rem($values, $scale: $mint-base) {
  @return mint-unit($values, $mint-base, $scale, 1rem);
}

@function un($values, $scale: $mint-base) {
  @return mint-unit($values, $mint-base, $scale, 1);
}
