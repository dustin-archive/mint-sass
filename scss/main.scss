@import 'mint-variables';
@import 'mint-compress';

//
// + Variables
// =============================================================================

$mint-base: 16 !default;

//
// + Units
// =============================================================================

@function mint-scale($value, $base, $scale) {
  @return ($base / $scale) * $value;
}

@function mint-convert($value, $base) {
  @return $value / $base;
}

//
// + Units
// =============================================================================

@function mint-unit($values, $base, $scale, $unit) {
  $result: ();
  $values: mint-compress($values);

  @each $value in $values {
    @if type-of($value) == 'number' and $value != 0 {
      $value: mint-scale($value, $base, $scale);
      $value: mint-convert($value, $base);
      $value: $value * $unit;
      $result: join($result, $value);
    }
    @else {
      $result: join($result, $value);
    }
  }

  @return $result;
}

//
// + Units
// =============================================================================

@function em($values, $scale: $mint-base) {
  @return mint-unit($values, $mint-base, $scale, 1em);
}

@function rem($values, $scale: $mint-base) {
  @return mint-unit($values, $mint-base, $scale, 1rem);
}

@function px($values, $scale: 1) {
  @return mint-unit($values, 1, $scale, 1px);
}

@function un($values, $scale: $mint-base) {
  @return mint-unit($values, $mint-base, $scale, 1);
}
